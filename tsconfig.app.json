{
  // "extends": "./tsconfig.json", // This line might be present if it inherits from the root tsconfig.json
                                  // If it is, ensure the root one doesn't have conflicting lib/target settings,
                                  // or that this file's settings correctly override.
  "compilerOptions": {
    // --- CORE CHANGES ---
    "target": "ES2022",                     // Specify the ECMAScript target version
    "lib": ["ES2022", "DOM", "DOM.Iterable"], // Include type definitions for ES2022 and browser DOM APIs

    // --- COMMON VITE + REACT-TS SETTINGS (Ensure these are present or appropriate) ---
    "jsx": "react-jsx",                     // How JSX is processed
    "module": "ESNext",                     // Module system for modern JavaScript
    "moduleResolution": "bundler",          // Or "node", how modules are resolved
    
    "composite": true,                      // Often used in project references setup by Vite
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo", // Vite's build info file

    "strict": true,                         // Enable all strict type-checking options
    "esModuleInterop": true,                // Enables compatibility with CommonJS modules
    "allowSyntheticDefaultImports": true,   // Allow default imports from modules with no default export
    "forceConsistentCasingInFileNames": true,// Enforce consistent casing in file names
    
    "skipLibCheck": true,                   // Skip type checking of all declaration files (*.d.ts)
    "noEmit": true,                         // Do not emit output (Vite handles bundling/transpilation)
    "isolatedModules": true,                // Ensure each file can be safely transpiled without relying on other imports (good for bundlers)
    
    // Optional but good linting-related options
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "resolveJsonModule": true               // Allows importing .json files
    
    // If your root tsconfig.json has "baseUrl" and "paths" for aliases,
    // they might be inherited or you might need to define them here if App.json is standalone.
    // "baseUrl": ".",
    // "paths": {
    //   "@/*": ["./src/*"]
    // }
  },
  "include": ["src"] // Specifies that this tsconfig applies to files in the 'src' directory
  // "exclude": ["node_modules", "dist"] // Usually handled by root or not needed if include is specific
}